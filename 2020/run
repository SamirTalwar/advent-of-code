#!/usr/bin/env nix-shell
#!nix-shell -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/f366af7a1b3891d9370091ab03150d3a6ee138fa.tar.gz -i zsh ./shell.nix

set -e
set -u
set -o pipefail

dir=$(dirname $0)
year=$(basename $dir)

optimize=false
while [[ $1 =~ ^- ]]; do
  case $1 in
    -O)
      optimize=true
      shift
      ;;
  esac
done

day=$(printf '%02d' $1)
shift
if [[ $# -gt 0 ]]; then
  exercise=${1:-}
  shift
fi

output_directory=("${PWD}/build/${year}")
if (( ${+exercise} )); then
  name="AOC_${day}_${exercise}"
else
  name="AOC_${day}"
fi

mkdir -p $output_directory

executable="${output_directory}/${name}"
if $optimize; then
  compilation_args=()
else
  compilation_args=(--debug)
fi
temp_src_root="${TMPDIR:-/tmp}/advent-of-code/${year}"
trap 'rm -rf $temp_src_root' EXIT
temp_src="${temp_src_root}/${name}"
mkdir -p $temp_src
(
  cd $dir
  files=(helpers/*.pony corral.json lock.json)
  if [[ -e _corral ]]; then
    files+=(_corral)
  fi
  if [[ -e _repos ]]; then
    files+=(_repos)
  fi
  cp -R "${name}.pony" $files $temp_src
)
hash_file="${output_directory}/${name}.input-hash"
current_hash=$([[ -e $hash_file ]] && cat $hash_file || :)
(
  cd $temp_src
  new_hash=$((echo $compilation_args; find . -type f | sort | xargs sha256sum) | sha256sum)
  if [[ $current_hash != $new_hash ]]; then
    rm -f $hash_file
    corral run -- ponyc $compilation_args --output=${output_directory} >&2
    echo $new_hash > $hash_file
  fi
  rm -rf $temp_src_root
)

time $executable $@
