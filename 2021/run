#!/usr/bin/env zsh

set -e
set -u
set -o pipefail

cd $(dirname $0)

optimize=false
profile=false
while [[ $1 =~ ^- ]]; do
  case $1 in
    -O)
      optimize=true
      shift
      ;;
    -P)
      optimize=true
      profile=true
      shift
      ;;
  esac
done

day=$(printf '%02d' $1)
shift
if [[ $# -gt 0 ]]; then
  part=${1:-}
  shift
fi

output_directory="${PWD}/build"
if (( ${+part} )); then
  name="AOC_${day}_${part}"
else
  name="AOC_${day}"
fi

haskell_args=('-Wall')
runtime_args=($@)
if $optimize; then
  if $profile; then
    haskell_args+=('-prof' '-fprof-auto')
    runtime_args+=('+RTS' '-p' '-RTS')
  fi
  files=("${dir}/${name}.hs" ${dir}/Helpers/*.hs)
  output_directory="${output_directory}/${name}"
  mkdir -p $output_directory
  executable="${output_directory}/run"
  (
    ormolu -i $files
    hlint $files || :
    ghc \
      $haskell_args \
      -O2 \
      -o $executable \
      -odir $output_directory \
      -hidir $output_directory \
      $files
    echo
  )>&2
  time $executable $runtime_args
else
  (
    cd $dir
    file="${name}.hs"
    files=($file Helpers/*.hs)
    (
      ormolu -i $files
      hlint $files || :
      echo
    ) >&2
    time runhaskell $haskell_args $file $runtime_args
  )
fi
