#!/usr/bin/env zsh

set -e
set -u
set -o pipefail

cd $(dirname $0)

args=()
input_mechanism=stdin
while [[ $1 =~ ^- ]]; do
  case $1 in
    --input-as-arg)
      input_mechanism=arg
      shift
      ;;
    *)
      args+=($1)
      shift
      ;;
  esac
done

if [[ ! -d $1 || ! ( $2 =~ '^[0-9]+$' ) ]]; then
  echo >&2 "Usage: $0 [-O] <year> <day> [<part>]"
  exit 2
fi

year=$1
day=$(printf '%02d' $2)
shift 2
args+=($day)
if [[ $# -gt 0 ]]; then
  part=${1:-}
  args+=($part)
  shift
fi

args+=($@)

input="${year}/AOC_${day}.input"
if (( ${+part} )); then
  answer="${year}/AOC_${day}_${part}.answer"
  echo >&2 "Running year ${year}, day ${day}, part ${part}..."
else
  answer="${year}/AOC_${day}.answer"
  echo >&2 "Running year ${year}, day ${day}..."
fi

if [[ -t 0 ]]; then
  if [[ ! -e $input ]]; then
    ./download-inputs $year $day
  fi

  output=$(mktemp)
  trap 'rm -f $output' EXIT
  if [[ $input_mechanism == 'arg' ]]; then
    (./$year/run $args $input) | tee $output
  else
    (./$year/run $args < $input) | tee $output
  fi
  if [[ -e $answer ]]; then
    if ! diff_output=$(git diff --color --no-index --ignore-space-change $answer $output); then
      echo >&2
      echo >&2 'The answer was incorrect.'
      echo >&2 $diff_output
      exit 1
    fi
  fi
else
  ./$year/run $args
fi
