#!/usr/bin/env nix-shell
#!nix-shell -i python3 -p python3

import os
import sys
from collections import namedtuple
from datetime import datetime, timedelta, timezone
from urllib.request import Request, urlopen

if 'SESSION_KEY' not in os.environ:
   print('You must set the SESSION_KEY environment variable.', file=sys.stderr)
   sys.exit(1)

Day = namedtuple('Day', ['year', 'day'])

EST = timezone(offset=timedelta(hours=-5), name='EST')
now = datetime.now(tz=EST)

last_day = 25
earliest = Day(year=2015, day=1)
latest = Day(year=now.year, day=min(last_day, now.day)) if now.month == 12 \
    else Day(year=now.year - 1, day=last_day)

def all_days():
    return [(year, day) for year in range(earliest.year, latest.year)
        for day in range(earliest.day, last_day + 1)] \
          + [(latest.year, day) for day in range(earliest.day, latest.day + 1)]

def download(year, day):
    filename = f'{year}/AOC_{day:02}.input'
    try:
        with open(filename, 'xb') as f:
            print(f'Downloading {year}/{day:02}...', file=sys.stderr)
            request = Request(
                url=f'https://adventofcode.com/{year}/day/{day}/input',
                headers={
                    'Cookie': f'session={os.environ["SESSION_KEY"]}',
                })
            with urlopen(request) as response:
                for line in response:
                    f.write(line)
            print(f'Downloaded {year}/{day:02}.', file=sys.stderr)
    except FileExistsError:
        pass
    except:
        os.remove(filename)
        raise

arg_count = len(sys.argv)
if arg_count == 3:
    days = [(int(sys.argv[1]), int(sys.argv[2]))]
elif arg_count == 2:
    year = int(sys.argv[1])
    days = ((y, d) for (y, d) in all_days() if y == year)
elif arg_count == 1:
    days = all_days()
else:
    print("Expected 0 or 2 arguments.", file=sys.stderr)
    sys.exit(2)

for year, day in days:
    download(year, day)
